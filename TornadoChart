# Set the parameters for the assessment of two independent risk factors to produce a tornado chart
n <- 10000                  # Number of random simulations
confidence_level1 <- 0.95    # Confidence level for the risk factor 1
lower1 <- 2000               # Lower value of the risk factor 1 
upper1 <- 3000               # Upper value of the risk factor 1
events1 <- 5                 # Expected number of trials in the time horizon for risk factor 1
chances1 <- 0.5              # Probability of each trial resulting in an incident for risk factor 1
confidence_level2 <- 0.7    # Confidence level for the risk factor 2
lower2 <- 1000               # Lower value of the risk factor 2 
upper2 <- 2000               # Upper value of the risk factor 2
events2 <- 10                 # Expected number of trials in the time horizon for risk factor 2
chances2 <- 0.25              # Probability of each trial resulting in an incident for risk factor 2

# Calculate the error margin and the lower and upper quantiles for the specified confidence level
error1 <- (1 - confidence_level1) / 2
lowerq1 <- qlnorm(error1)      
upperq1 <- qlnorm(1 - error1)  
error2 <- (1 - confidence_level2) / 2
lowerq2 <- qlnorm(error2)      
upperq2 <- qlnorm(1 - error2)  

# Log-transform the lower and upper bounds
log_lower1 <- log(lower1)
log_upper1 <- log(upper1)
log_lower2 <- log(lower2)
log_upper2 <- log(upper2)

# Calculate the true mean and standard deviation of the log-transformed values
true_mean_log1 <- (log_lower1 + log_upper1) / 2
true_sd_log1 <- (log_upper1 - log_lower1) / (2 * qnorm(1 - error1))
true_mean_log2 <- (log_lower2 + log_upper2) / 2
true_sd_log2 <- (log_upper2 - log_lower2) / (2 * qnorm(1 - error2))

# Generate random values from a log-normal distribution to simulate impacts
x1 <- rlnorm(n, true_mean_log1, true_sd_log1)
y1 <- rbinom(n, events1, chances1)
exposure1 <- x1 * y1
min1 <- quantile(exposure1, c(.2))
max1 <- quantile(exposure1, c(.8))
x2 <- rlnorm(n, true_mean_log2, true_sd_log2)
y2 <- rbinom(n, events2, chances2)
exposure2 <- x2 * y2
min2 <- quantile(exposure2, c(.2))
max2 <- quantile(exposure2, c(.8))

# Print min1, max1, min2, max2
print("Risk factor 1:")
print(paste("Min:", min1))
print(paste("Max:", max1))
print("Risk factor 2:")
print(paste("Min:", min2))
print(paste("Max:", max2))

# Define the base case value and sensitivity ranges for two risks
base_case <- 100
sensitivity_var1 <- c(min1, max1)
sensitivity_var2 <- c(min2, max2)

# Create a data frame for the tornado chart data
tornado_data <- data.frame(
  Variables = c("Variable1", "Variable2"),
  BaseCase = rep(base_case, 2),
  Low = c(sensitivity_var1[1], sensitivity_var2[1]),
  High = c(sensitivity_var1[2], sensitivity_var2[2])
)

# Transpose the data frame
tornado_data_transposed <- data.frame(
  Values = c("Low", "High"),
  Variable1 = c(sensitivity_var2[1], sensitivity_var2[2]),
  Variable2 = c(sensitivity_var1[1], sensitivity_var1[2])
)

# Create the tornado chart
barplot(
  height = as.matrix(tornado_data_transposed[, -1]),
  beside = TRUE,
  col = c("lightblue", "lightgreen"),
  names.arg = tornado_data_transposed$Values,
  horiz = TRUE,
  main = "Horizontal Tornado Chart",
  xlab = "Values",
  ylab = "Variables",
  legend.text = c("Risk factor 2", "Risk factor 1"),
  args.legend = list(x = "topright")
)


# Calculate the differences
diff_risk1 <- max1 - min1
diff_risk2 <- max2 - min2

# Create a data frame for the differences
diff_data <- data.frame(
  Variables = c("Risk factor 2", "Risk factor 1"),
  Differences = c(diff_risk2, diff_risk1)
)

# Create the horizontal bar chart
barplot(
  height = diff_data$Differences,
  horiz = TRUE,
  col = c("lightblue", "lightgreen"),
  main = "Horizontal Bar Chart - Differences",
  xlab = "Differences",
  ylab = "Variables",
  names.arg = diff_data$Variables,
  legend.text = c("Risk factor 2", "Risk factor 1"),
  args.legend = list(x = "topright")
)
